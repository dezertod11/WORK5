1. На чем основано объектно-ориентированное программирование?
Полиморфизм - одинковый интерфейс, но разные реализации
Наследование - производный класс наследует свойства родительского класса
Инкапсуляция - приватные данные, публичный интерфейс



2. Какие аспекты следует учитывать при проектировании классов?
Следует выделять секции публичные(publiс), приватные(private), и защищенные(protected).
В больших классах следует разделять интерфейс и реализацию - выносить в отдельные файлы
Для констант следует использовать статичные переменные(static,static inline const).


3. Почему удобно разделять классы на интерефейс и реализаци ?
Интерфейс позволяет контролировать действия пользователя - это уменьшает число потенциальных ошибок. 
Также благодаря хорошему интерфейсу удобнее работать с большим и сложно реализованным классом.


4. Чем внутреннее связывание отличается от внешнего связывания?
Внешнее связывание позволяет обращаться к объектам из других юнитов трансляции. 
Внутренее связывание позволяет обратиться к объекту только из юнита трансляции которому он принадлежит.


5. Какими особенностями обладают именованные пространства имен?
Позволяют избежать повторения имен в больших проектах.
Есть возможность создавть пространства имен в пространстве имен. 
Можно задавать объекты из однного просторанства имен в разных частях программы.

